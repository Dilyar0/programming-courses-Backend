создать папку .gitignore


в терминале: 

git init
git status (проверяем в какой ветке находимся. По умолчаннию либо master, либо main)
  У гита есть классификация файлов: 
	1- Traccked-Отслеживаемые файлы - это тот файл, изменение которого фиксируется системой контроля версий  (горят желтыми либо зелеными)
	2- Untracked-Неотслеживаемые файлы (горят красными)
git add .  - добавляет/смортрит что в данный момент находится в файлах и в последующщем просто анализиурет
  git rm --cached <file> - чтобы удалить файл из отслеживаемых
  git rm -f <file> - чтобы удалить файл совсем (т.е. с диска тоже)
git commit -m "initial commit" - служит для того чтобы зафиксировать снимок состояния локального репозитория на данный момент времени. 
  изменяем лбой файл...
git add <пишем имя измененного файла для последующей фиксации коммитом>
git commit -m "описываем изменение" - фиксируем т.е.(добавляем в систему контроля версий)
git log - отображает информацию о сделанных нами коммитах
git diff - отображает информацию о изменениях в наших файлах
git remote add origin (пишем любое слово, он служит лишь указателем для удаленного репозитория, обычно используют origin) https://gitlab.com/erb01/test-gitlab.git - она связывает нашу папку с репозитоорией в гите 
git remote - показывает список удаленных репозиториев к которым привязана данная папка
git push origin т.е.(пишем имя репо) main т.е.(пишем имя ветки в которую мы хотим залить проект) 
git branch dev - создаем новую ветку (обычно называют dev)
git branch - смотрим в какой ветке находимся 
git checkout dev(имя ветки на котрую мы переключаемся) - переходим на ветку dev
git add .
git commit -m "описываем экстремальные изменения которые нельзя кинуть сразу в основную ветку"
git log - смотрим к какой ветке относится коммит 
git push -u origin dev - пушим в dev  ветку
git checkout main - переходим на основную ветку чтобы слить две ветки 
git branch - убеждаемся что находимся в основной ветке
git merge dev - пишем имя ветки содержимое которой мы хотим перекинуть в основную (слияние двух веток)
git log - смотрим к какой ветке относится коммит (должна быть основная ветка)
git push -u origin main - пушим основную ветку (в команде git push идет загрузка содержимого коммита,  а не загрузка файлов, если в коммите было указано удалить файл - то при пуше файл удалится) 

git branch -D dev т.е.(название ветки) - можно удалить (локальную ветку) ветку
git push orgin --delete (branch name) - удаляет удаленную ветку из гита

Нельзя создавать или добавлять файл прямо в гитлабе 

